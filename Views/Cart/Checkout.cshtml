@using TechNova.Models.Core
@model Checkout
@{
    ViewData["Title"] = "Thanh toán";
    var defaultAddr = ViewBag.DefaultAddress as Address;
}

<div class="checkout-wrapper">
    @if (Model.CartItems.Count == 0)
    {
        <p>Không có sản phẩm trong giỏ hàng.</p>
    }
    else
    {
        <form asp-controller="Payments" asp-action="ConfirmOrder" method="post">
            <!-- Sản phẩm -->
            <h4>📦 Sản phẩm</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Ảnh</th>
                        <th>Tên</th>
                        <th>Phân loại</th>
                        <th>Số lượng</th>
                        <th>Giá</th>
                        <th>Tổng</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr>
                            <td><img src="@item.ImageUrl" width="60" /></td>
                            <td>@item.Name</td>
                            <td>@item.Color - @item.Storage</td>
                            <td>@item.Quantity</td>
                            <td>@item.Price.ToString("N0")₫</td>
                            <td>@item.TotalPrice.ToString("N0")₫</td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Địa chỉ giao hàng -->
            <h4>🚚 Địa chỉ giao hàng</h4>
            @if (Model.Addresses != null && Model.Addresses.Any())
            {
                <div class="mb-3">
                    <label for="SelectedAddressId" class="form-label fw-bold">Chọn địa chỉ giao hàng:</label>
                    <select name="SelectedAddressId" class="form-select" required>
                        @foreach (var addr in Model.Addresses)
                        {
                            <option value="@addr.AddressId" selected="@(addr.IsDefault ? "selected" : null)">
                                @addr.FullName - @addr.Phone | @addr.Street, @addr.Ward, @addr.District, @addr.City
                                @(addr.IsDefault ? "(Mặc định)" : "")
                            </option>
                        }
                    </select>
                </div>
            }

            <div id="add-address-toggle" class="text-end mb-3">
                <button type="button" class="btn btn-outline-primary" id="showAddAddressBtn">➕ Thêm địa chỉ mới</button>
            </div>

            <div id="add-address-form" class="address-form @(Model.Addresses.Any() ? "d-none" : "")">
                <div class="row">
                    <div class="col-md-6 mb-2">
                        <label>Họ và tên người nhận</label>
                        <input type="text" name="FullName" class="form-control" />
                    </div>
                    <div class="col-md-6 mb-2">
                        <label>Số điện thoại</label>
                        <input type="tel" name="Phone" class="form-control" />
                    </div>
                    <div class="col-md-12 mb-2">
                        <label>Số nhà, tên đường</label>
                        <input type="text" name="Street" class="form-control" />
                    </div>
                    <div class="col-md-4 mb-2">
                        <label>Tỉnh / Thành phố</label>
                        <select id="city" name="City" class="form-control" required>
                            <option value="">-- Chọn tỉnh/thành --</option>
                        </select>
                    </div>
                    <div class="col-md-4 mb-2">
                        <label>Quận / Huyện</label>
                        <select id="district" name="District" class="form-control" required disabled>
                            <option value="">-- Chọn quận/huyện --</option>
                        </select>
                    </div>
                    <div class="col-md-4 mb-2">
                        <label>Phường / Xã</label>
                        <select id="ward" name="Ward" class="form-control" required disabled>
                            <option value="">-- Chọn phường/xã --</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Phương thức thanh toán -->
            <h4>💳 Phương thức thanh toán</h4>
            <div class="mb-3">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="PaymentMethod" value="COD" checked />
                    <label class="form-check-label">Thanh toán khi nhận hàng (COD)</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="PaymentMethod" value="Momo" />
                    <label class="form-check-label">Thanh toán qua Momo</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="PaymentMethod" value="VNPay" />
                    <label class="form-check-label">Thanh toán qua VNPay</label>
                </div>
            </div>

            <!-- Tổng tiền -->
            <h4>💰 Tổng cộng</h4>
            <p>Phí vận chuyển: <strong>@Model.ShippingFee.ToString("N0")₫</strong></p>
            <p>Tổng thanh toán: <strong class="text-danger">@Model.Total.ToString("N0")₫</strong></p>

            <button type="submit" class="btn btn-success mt-3">Xác nhận đặt hàng</button>
        </form>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const btn = document.getElementById("showAddAddressBtn");
            const form = document.getElementById("add-address-form");
            btn?.addEventListener("click", function () {
                form.classList.toggle("d-none");
            });

            const citySelect = document.getElementById("city");
            const districtSelect = document.getElementById("district");
            const wardSelect = document.getElementById("ward");

            fetch("https://provinces.open-api.vn/api/?depth=1")
                .then(res => res.json())
                .then(cities => {
                    cities.forEach(city => {
                        const opt = document.createElement("option");
                        opt.value = city.name;
                        opt.textContent = city.name;
                        opt.dataset.code = city.code;
                        citySelect.appendChild(opt);
                    });
                });

            citySelect.addEventListener("change", () => {
                const selectedCode = citySelect.options[citySelect.selectedIndex].dataset.code;
                if (!selectedCode) return;

                districtSelect.innerHTML = `<option value="">-- Chọn quận/huyện --</option>`;
                wardSelect.innerHTML = `<option value="">-- Chọn phường/xã --</option>`;
                districtSelect.disabled = true;
                wardSelect.disabled = true;

                fetch(`https://provinces.open-api.vn/api/p/${selectedCode}?depth=2`)
                    .then(res => res.json())
                    .then(data => {
                        data.districts.forEach(d => {
                            const opt = document.createElement("option");
                            opt.value = d.name;
                            opt.textContent = d.name;
                            opt.dataset.code = d.code;
                            districtSelect.appendChild(opt);
                        });
                        districtSelect.disabled = false;
                    });
            });

            districtSelect.addEventListener("change", () => {
                const selectedCode = districtSelect.options[districtSelect.selectedIndex].dataset.code;
                if (!selectedCode) return;

                wardSelect.innerHTML = `<option value="">-- Chọn phường/xã --</option>`;
                wardSelect.disabled = true;

                fetch(`https://provinces.open-api.vn/api/d/${selectedCode}?depth=2`)
                    .then(res => res.json())
                    .then(data => {
                        data.wards.forEach(w => {
                            const opt = document.createElement("option");
                            opt.value = w.name;
                            opt.textContent = w.name;
                            wardSelect.appendChild(opt);
                        });
                        wardSelect.disabled = false;
                    });
            });

            // FIX: remove 'disabled' before submit
            document.querySelector("form")?.addEventListener("submit", function () {
                citySelect.disabled = false;
                districtSelect.disabled = false;
                wardSelect.disabled = false;
            });
        });
    </script>
}


<style>
.checkout-wrapper{
    max-width: 960px;
    margin: 40px auto;
    background:#fff;
    padding:32px 24px;
    border-radius:16px;
    box-shadow:0 6px 24px rgba(0,0,0,.08);
}

h4{
    font-size:20px;
    font-weight:700;
    margin:28px 0 16px;
}

.table{
    border-collapse:collapse;
    width:100%;
    margin-bottom:24px;
}
.table thead{
    background:#f5f7fa;
}
.table th,.table td{
    padding:12px 10px;
    text-align:left;
    border-bottom:1px solid #e2e8f0;
    vertical-align:middle;
}
.table tbody tr:hover{
    background:#fafafa;
}
.table img{
    border-radius:8px;
}

.form-control{
    border-radius:8px;
    padding:8px 12px;
}
.form-check-input{
    width:18px;height:18px;
    margin-top:2px;
}
.form-check-label{
    margin-left:6px;
}

.text-danger{
    color:#e53935!important;
    font-size:20px;
    font-weight:700;
}

.btn-success{
    background:#43a047;
    padding:10px 26px;
    border:none;
    border-radius:8px;
    font-weight:600;
}
.btn-success:hover{
    background:#388e3c;
}

media(max-width:768px){
    .table thead{
        display:none;
    }
    .table, .table tbody, .table tr, .table td{
        display:block;
        width:100%;
    }
    .table tr{
        margin-bottom:16px;
        border:1px solid #e0e0e0;
        border-radius:12px;
        overflow:hidden;
    }
    .table td{
        padding:10px 12px;
        border:none;
    }
    .table td:before{
        content:attr(data-label);
        font-weight:600;
        display:block;
        margin-bottom:4px;
        color:#555;
    }
}
</style>
