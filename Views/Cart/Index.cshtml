@using TechNova.Models.Core
@model List<CartItem>
@{
    ViewData["Title"] = "Giỏ hàng";
    var total = Model.Sum(x => x.TotalPrice);
}

<link rel="stylesheet" href="~/css/cart.css" />

<div class="cart-wrapper">
    <div class="cart-box">
        <h2>🛒 Giỏ hàng của bạn</h2>

        @if (!Model.Any())
        {
            <div class="empty-cart">
                <p>Giỏ hàng trống.</p>
                <a href="/Home/Store" class="btn btn-primary">Tiếp tục mua sắm</a>
            </div>
        }
        else
        {
            <div class="cart-list">
                @foreach (var item in Model)
                {
                    <div class="cart-item">
                        <div class="cart-image">
                            <img src="@item.ImageUrl" alt="@item.Name" />
                        </div>

                        <div class="cart-info">
                            <h4>@item.Name</h4>
                            <p><strong>Màu:</strong> @item.Color</p>
                            <p><strong>Dung lượng:</strong> @item.Storage</p>
                            <p><strong>Đơn giá:</strong> @item.Price.ToString("N0")₫</p>
                            <p><strong>Số lượng:</strong> @item.Quantity</p>
                            <p><strong>Phí vận chuyển:</strong> @item.ShippingFee.ToString("N0")₫</p>
                            <p><strong>Phương thức:</strong> @item.ShippingMethod</p>
                            <p><strong>Thành tiền:</strong> @item.TotalPrice.ToString("N0")₫</p>

                            <form asp-action="Remove" method="post">
                                <input type="hidden" name="productId" value="@item.ProductId" />
                                <input type="hidden" name="color" value="@item.Color" />
                                <input type="hidden" name="storage" value="@item.Storage" />
                                <button class="btn-remove" data-id="@item.ProductId" data-color="@item.Color" data-storage="@item.Storage">
                                    Xóa
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>

            <div class="cart-summary-box">
                <hr />
                <div class="summary-line">
                    <span>Tổng cộng:</span>
                    <span class="fw-bold text-danger">@total.ToString("N0")₫</span>
                </div>
                <a href="@Url.Action("Checkout", "Cart")" class="btn btn-primary">Tiến hành thanh toán</a>

            </div>
        }
    </div>
</div>


@section Scripts {
    <script>
        document.querySelectorAll('.cart-item').forEach(item => {
            const unitPrice = parseFloat(item.dataset.price || 0);
            const qtyDisplay = item.querySelector('.qty-value');
            const priceEl = item.querySelector('.item-price');

            item.querySelector('.qty-minus').addEventListener('click', () => updateQty(-1));
            item.querySelector('.qty-plus').addEventListener('click', () => updateQty(1));

            function updateQty(change) {
                let qty = parseInt(qtyDisplay.textContent) || 1;
                qty = Math.max(1, qty + change);
                qtyDisplay.textContent = qty;
                priceEl.textContent = (qty * unitPrice).toLocaleString() + '₫';
                updateTotalAll();
            }
        });

        function updateTotalAll() {
            let total = 0;
            document.querySelectorAll('.cart-item').forEach(item => {
                const price = parseFloat(item.dataset.price);
                const qty = parseInt(item.querySelector('.qty-value').textContent) || 1;
                total += price * qty;
            });
            const formatted = total.toLocaleString() + '₫';
            document.getElementById('totalAmount').innerText = formatted;
            document.getElementById('subtotalAmount').innerText = formatted;
        }

        document.querySelectorAll('.btn-remove').forEach(btn => {
            btn.addEventListener('click', e => {
                e.preventDefault();
                const form = btn.closest('form');
                const itemDiv = btn.closest('.cart-item');
                itemDiv.style.transition = "opacity 0.3s ease, transform 0.3s ease";
                itemDiv.style.opacity = "0";
                itemDiv.style.transform = "translateX(20px)";
                setTimeout(() => {
                    form.submit();
                }, 300);
            });
        });
    </script>
    <script>
        document.querySelectorAll('.btn-remove').forEach(btn => {
            btn.addEventListener('click', function () {
                const id = this.dataset.id;
                const color = this.dataset.color || "";
                const storage = this.dataset.storage || "";

                fetch('/Cart/RemoveAjax', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: `productId=${id}&color=${color}&storage=${storage}`
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        this.closest('.cart-item-row')?.remove(); // remove row
                        document.getElementById('cartCount').textContent = data.cartCount;
                        document.getElementById('totalAmount').textContent =
                            data.newTotal.toLocaleString('vi-VN') + ' ₫';
                    }
                });
            });
        });
    </script>
}
