@using TechNova.Models.Core
@model List<Category>
@await Html.PartialAsync("_AlertMessage")
@{
    ViewData["Title"] = "Quản lý Danh mục";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="d-flex justify-content-end mb-3">
    <a href="/AdminCategories/Create" class="btn btn-primary btn-add">
        <i class="bi bi-plus-circle me-1">Thêm danh mục</i>
    </a>

</div>

<table class="table table-bordered table-hover align-middle">
    <thead class="table-light">
        <tr>
            <th>Danh mục</th>
            <th>Mô tả</th>
            <th>SVG/Icon</th>
            <th>Sản phẩm</th>
            <th>Trạng thái</th>
            <th>Ngày tạo</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var cat in Model)
        {
            <tr>
                <!-- Ảnh + Tên -->
                <td>
                    <div class="d-flex align-items-center gap-2">
                        @if (!string.IsNullOrEmpty(cat.MainImageUrl))
                        {
                            <img src="@cat.MainImageUrl" alt="Ảnh" style="width: 40px; height: 40px; border-radius: 8px; object-fit: cover;" />
                        }
                        else
                        {
                            <div style="width: 40px; height: 40px; background: #eee; border-radius: 8px;"></div>
                        }
                        <span>@cat.Name</span>
                    </div>
                </td>

                <!-- Mô tả -->
                <td>@(string.IsNullOrEmpty(cat.Description) ? "-" : cat.Description)</td>

                <!-- SVG (nếu có) -->
                <td>
                    @if (!string.IsNullOrEmpty(cat.SvgUrl))
                    {
                        @Html.Raw(cat.SvgUrl)
                    }
                    else
                    {
                        <span class="text-muted fst-italic">Không có</span>
                    }
                </td>

                <!-- Số sản phẩm -->
                <td>@(cat.Products?.Count(p => p.IsActive) ?? 0)</td>


                <!-- Trạng thái -->
                <td>
                    @if (cat.IsActive)
                    {
                        <span class="badge bg-success">Đang hoạt động</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Ngừng</span>
                    }
                </td>

                <!-- Ngày tạo -->
                <td>@cat.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>

                <!-- Hành động -->
                <td>
                    <div class="action-icons">
                        <button class="icon-btn tooltip toggle-status-btn"
                                data-id="@cat.CategoryId" data-status="@cat.IsActive"
                                data-tooltip="Chuyển trạng thái">
                            @if (cat.IsActive)
                            {
                                <i class="bi bi-eye-fill text-success"></i>
                            }
                            else
                            {
                                <i class="bi bi-eye-slash-fill text-secondary"></i>
                            }
                        </button>

                        <a href="/AdminCategories/Edit/@cat.CategoryId" class="icon-btn tooltip" data-tooltip="Sửa">
                            <i class="bi bi-pencil-fill"></i>
                        </a>

                        <a href="/AdminCategories/Delete/@cat.CategoryId"
                           class="icon-btn tooltip" data-tooltip="Xoá"
                           onclick="return confirm('Bạn có chắc muốn xoá danh mục này không?');">
                            <i class="bi bi-trash-fill text-danger"></i>
                        </a>
                    </div>
                </td>

            </tr>
        }
    </tbody>
</table>


@section Scripts {
    <script>
        document.querySelectorAll('.toggle-status-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const catId = this.dataset.id;

                fetch(`/AdminCategories/ToggleStatus/${catId}`, {
                    method: 'POST'
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const icon = this.querySelector('i');
                            if (data.newStatus) {
                                icon.classList.remove('bi-eye-slash-fill', 'text-secondary');
                                icon.classList.add('bi-eye-fill', 'text-success');
                            } else {
                                icon.classList.remove('bi-eye-fill', 'text-success');
                                icon.classList.add('bi-eye-slash-fill', 'text-secondary');
                            }
                            this.dataset.status = data.newStatus;
                        } else {
                            alert("Đã xảy ra lỗi khi cập nhật trạng thái.");
                        }
                    });
            });
        });
    </script>
}
@section Styles {
    <style>
        .btn-add {
            font-weight: 500;
            font-size: 14px;
            padding: 8px 14px;
            background-color: #1c3faa;
            border: none;
            color: white;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

            .btn-add:hover {
                background-color: #0f2e88;
                color: #fff;
            }

            .btn-add i {
                font-size: 16px;
            }
        .action-icons {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .icon-btn {
            background-color: #f1f3f5;
            border: none;
            border-radius: 50%;
            padding: 6px 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .icon-btn:hover {
                background-color: #e0e0e0;
            }

            .icon-btn i {
                font-size: 16px;
                color: #333;
            }

        .tooltip {
            position: relative;
        }

            .tooltip:hover::after {
                content: attr(data-tooltip);
                position: absolute;
                bottom: 110%;
                left: 50%;
                transform: translateX(-50%);
                background-color: #333;
                color: #fff;
                padding: 4px 8px;
                font-size: 12px;
                border-radius: 4px;
                white-space: nowrap;
                opacity: 1;
                z-index: 1000;
            }
    </style>
}
